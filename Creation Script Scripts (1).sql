-- ***********************
-- Name: James Manglinong
-- Name: Allan Christopher Caliso
-- Name: Hery Chen Jarod Jian Kang
-- Name: Gurkirat Singh
-- Name: Joana Bala

-- ID: Std: 130036239   oracleID: dbs211_242zaa22
-- ID: Std: 123189235   oracleID: dbs211_242zaa09
-- ID: Std: 121778237   oracleID: dbs211_242zaa13
-- ID: Std: 144886223   oracleID: dbs211_242zaa36
-- ID: Std: 146501234   oracleID: dbs211_242zaa50
-- Team: 7
-- Date: July 20, 2024
-- Purpose: DDL Script DBS211
-- ***********************

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PRESCRIPTION CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MEDICAL_ADVICE CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE FEEDBACK CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE APPOINTMENTS CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PATIENT_INFO CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PHYSICIAN_INFO CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE STAFF CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- DROP VIEW VW_ADMIN_PATIENT_APPOINTMENTS;

BEGIN
    EXECUTE IMMEDIATE 'DROP VIEW VW_PHYSICIAN_APPOINTMENTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP VIEW VW_PATIENT_FEEDBACK';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP VIEW VW_ADMIN_PATIENT_APPOINTMENTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/


BEGIN
    EXECUTE IMMEDIATE 'DROP VIEW VW_PATIENT_HISTORY';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/


-- ALL PATIENT 


CREATE TABLE PATIENT_INFO (
    PATIENT_ID NUMBER(10) PRIMARY KEY NOT NULL,
    PAT_FNAME VARCHAR(50) NOT NULL,
    PAT_MNAME VARCHAR(50),
    PAT_LNAME VARCHAR(50) NOT NULL,
    PAT_BIRTH_DATE DATE NOT NULL,
    PAT_GENDER CHAR(1) NOT NULL,
    PAT_CIVIL_STATUS CHAR(1) NOT NULL,
    PAT_OCCUPATION VARCHAR(150) DEFAULT 'NA',
    PAT_PHONE VARCHAR(15) NOT NULL,
    PAT_EMAIL VARCHAR(100) NULL,
    PAT_ADDRESS VARCHAR(250) NOT NULL
);



CREATE TABLE PHYSICIAN_INFO (
    PHYSICIAN_ID NUMBER(10) PRIMARY KEY NOT NULL,
    PHY_FNAME VARCHAR2(50) NOT NULL,
    PHY_MNAME VARCHAR2(50),
    PHY_LNAME VARCHAR2(50) NOT NULL,
    PHY_LICENSE_NUMBER VARCHAR2(25) UNIQUE NOT NULL,
    PHY_BIRTH_DATE DATE NOT NULL,
    PHY_GENDER CHAR(1) NOT NULL,
    PHY_PHONE VARCHAR(15) NOT NULL,
    PHY_EMAIL VARCHAR(50),
    PHY_ADDRESS VARCHAR(250) NOT NULL,
    IS_ACTIVE CHAR(1) CHECK (IS_ACTIVE IN ('Y', 'N'))
);



CREATE TABLE STAFF (
    STAFF_ID NUMBER(10) PRIMARY KEY NOT NULL,
    STAFF_FNAME VARCHAR(50) NOT NULL,
    STAFF_MNAME VARCHAR(50),
    STAFF_LNAME VARCHAR(50) NOT NULL,
    STAFF_BIRTH_DATE DATE NOT NULL,
    STAFF_GENDER CHAR(1) NOT NULL,
    STAFF_PHONE VARCHAR(15) NOT NULL,
    STAFF_EMAIL VARCHAR(50) NOT NULL,
    STAFF_ADDRESS VARCHAR(250) NOT NULL
);



CREATE TABLE APPOINTMENTS (
    APPT_ID NUMBER(10) PRIMARY KEY NOT NULL,
    APPT_TIME_DATE TIMESTAMP NOT NULL,
    APPT_CONCERN_DESCRIPTION VARCHAR(250) NOT NULL,
    UPDATEDDATE DATE NULL,
    APPT_STATUS VARCHAR(50) NOT NULL, -- Edited
    PATIENT_ID NUMBER(10) NOT NULL,
    STAFF_ID NUMBER(10) NULL,
    PHYSICIAN_ID NUMBER(10) NOT NULL
);

ALTER TABLE APPOINTMENTS
ADD CONSTRAINT FK_PATIENT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_INFO(PATIENT_ID);

ALTER TABLE APPOINTMENTS
ADD CONSTRAINT FK_PHYSICIAN_ID FOREIGN KEY (PHYSICIAN_ID) REFERENCES PHYSICIAN_INFO(PHYSICIAN_ID);

ALTER TABLE APPOINTMENTS
ADD CONSTRAINT FK_STAFF_ID FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID);


CREATE TABLE FEEDBACK (
    FB_ID NUMBER(10) PRIMARY KEY NOT NULL,   
    FB_DATE DATE NOT NULL,
    FB_RATE NUMBER(1) DEFAULT 5 NOT NULL,
    FB_COMMENTS VARCHAR(250) NOT NULL,
     APPT_ID NUMBER(10) NOT NULL
   -- CONSTRAINT FB_RATE_CHK CHECK (FB_RATE BETWEEN 1 AND 5), 
   --  CONSTRAINT FK_APPT_ID FOREIGN KEY (APPT_ID) REFERENCES APPOINTMENTS(APPT_ID)
);

ALTER TABLE FEEDBACK 
ADD CONSTRAINT FB_RATE_CHK CHECK (FB_RATE BETWEEN 1 AND 5);

ALTER TABLE FEEDBACK 
ADD CONSTRAINT FK_APPT_ID FOREIGN KEY (APPT_ID) REFERENCES APPOINTMENTS(APPT_ID);



CREATE TABLE MEDICAL_ADVICE (
    MDA_ID NUMBER(10) PRIMARY KEY NOT NULL,
    MDA_ADVICE VARCHAR(250) NOT NULL,
    APPT_ID NUMBER(10) NOT NULL
    -- CONSTRAINT FK_MDA_APPT_ID FOREIGN KEY (APPT_ID) REFERENCES APPOINTMENTS(APPT_ID)
);

ALTER TABLE MEDICAL_ADVICE 
ADD CONSTRAINT FK_MDA_APPT_ID FOREIGN KEY (APPT_ID) REFERENCES APPOINTMENTS(APPT_ID);



CREATE TABLE PRESCRIPTION (
    PRESC_ID NUMBER(10) PRIMARY KEY NOT NULL,
    PRESCRIPTION_DESCRIPTION VARCHAR(250) NOT NULL,    
    MDA_ID NUMBER(10) NOT NULL
   -- CONSTRAINT FK_MDA_ID FOREIGN KEY (MDA_ID) REFERENCES MEDICAL_ADVICE(MDA_ID) -- to remove put to alter
);

ALTER TABLE PRESCRIPTION 
ADD CONSTRAINT FK_MDA_ID FOREIGN KEY (MDA_ID) REFERENCES MEDICAL_ADVICE(MDA_ID);

            
 -- Get Patient Appointment COunts
CREATE OR REPLACE VIEW VW_ADMIN_PATIENT_APPOINTMENTS AS
SELECT 
    p.patient_id
    ,p.pat_fname
    ,p.pat_mname
    ,p.pat_lname
    ,COUNT(a.APPT_ID) AS "Appointment Count"
FROM 
    PATIENT_INFO p 
INNER JOIN 
    APPOINTMENTS a ON p.PATIENT_ID = a.PATIENT_ID
GROUP BY 
    p.patient_id
    ,p.pat_fname
    ,p.pat_mname
    ,p.pat_lname
ORDER BY p.patient_id ASC;
        


CREATE OR REPLACE VIEW VW_PATIENT_APPOINTMENTS AS
SELECT 
    a.Appt_id
    ,pi.PAT_FNAME ||  ' ' || SUBSTR(pi.PAT_MNAME,0,1) || '. ' ||   pi.PAT_LNAME AS "Patient Name"
    ,a.appt_status
    ,pi.patient_id
    ,phi.PHY_FNAME ||  ' ' || SUBSTR(phi.PHY_MNAME,0,1) || '. ' ||   phi.PHY_LNAME AS "Attending Physician"
    ,TO_CHAR(a.APPT_TIME_DATE, 'MM/DD/YYYY HH:MI AM') AS  "Appointment Date/Time"
    , ma.MDA_ADVICE AS "Medical Advice"
    , pr.PRESCRIPTION_DESCRIPTION AS "Prescription"
FROM 
    PATIENT_INFO pi 
INNER JOIN 
    APPOINTMENTS a ON pi.PATIENT_ID = a.PATIENT_ID
INNER JOIN 
    PHYSICIAN_INFO phi ON a.PHYSICIAN_ID = phi.PHYSICIAN_ID
LEFT JOIN 
    MEDICAL_ADVICE ma ON a.APPT_ID = ma.APPT_ID
LEFT JOIN 
    PRESCRIPTION pr ON ma.MDA_ID = pr.MDA_ID
ORDER BY a.Appt_id ASC;



CREATE OR REPLACE VIEW VW_PHYSICIAN_APPOINTMENTS AS
SELECT 
     a.APPT_ID
     ,pi.PAT_FNAME ||  ' ' || SUBSTR(pi.PAT_MNAME,0,1) || '. ' ||   pi.PAT_LNAME AS "Patient Name"
     ,a.APPT_CONCERN_DESCRIPTION
     ,a.APPT_TIME_DATE
     ,a.APPT_STATUS
     ,p.PHY_FNAME ||  ' ' || SUBSTR(p.PHY_MNAME,0,1) || '. ' ||   p.PHY_LNAME AS "Attending Physician"
     ,p.PHYSICIAN_ID
FROM 
    APPOINTMENTS a 
INNER JOIN 
    PHYSICIAN_INFO p ON a.PHYSICIAN_ID = p.PHYSICIAN_ID 
INNER JOIN 
    PATIENT_INFO pi ON a.PATIENT_ID = pi.PATIENT_ID
ORDER BY a.appt_id ASC;
    


CREATE OR REPLACE VIEW VW_PATIENT_FEEDBACK AS
SELECT 
    a.APPT_ID
    ,pi.PAT_FNAME ||  ' ' || SUBSTR(pi.PAT_MNAME,0,1) || '. ' ||   pi.PAT_LNAME AS "Patient Name"
    ,a.APPT_STATUS
    ,f.FB_DATE
    ,f.FB_RATE
    ,f.FB_COMMENTS
FROM 
    APPOINTMENTS a 
INNER JOIN 
    PATIENT_INFO pi ON a.PATIENT_ID = pi.PATIENT_ID
INNER JOIN 
    FEEDBACK f ON a.APPT_ID = f.APPT_ID
ORDER BY 
    a.appt_id ASC;


-- Add VIEW
-- VIEW FOR HISTORY OF ALL APPOINTMENT CAN BE USE TO QUERY PATIENT HISTORY
CREATE OR REPLACE VIEW VW_PATIENT_HISTORY AS
SELECT
    A.APPT_ID,
    PAT.PATIENT_ID AS "PATIENT_ID",
    PAT.PAT_FNAME || ' ' || PAT.PAT_LNAME AS "PATIENT_NAME",
    A.APPT_TIME_DATE AS "APPOINTMENT_DATE",
    APPT_STATUS AS "APPOINTMENT_STATUS",
    P.PHY_FNAME || ' ' || P.PHY_LNAME AS "ATTENDING_PHYSICIAN",
    P.PHY_PHONE AS "CONTACT",
    P.PHY_EMAIL AS "EMAIL"
FROM 
    PATIENT_INFO PAT
LEFT JOIN 
    APPOINTMENTS A ON PAT.PATIENT_ID = A.PATIENT_ID
INNER JOIN 
    PHYSICIAN_INFO P ON A.PHYSICIAN_ID = P.PHYSICIAN_ID
ORDER BY A.APPT_ID ASC;
  



